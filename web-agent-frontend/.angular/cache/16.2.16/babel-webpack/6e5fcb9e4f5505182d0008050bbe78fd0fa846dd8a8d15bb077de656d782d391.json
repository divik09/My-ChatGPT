{"ast":null,"code":"import _asyncToGenerator from \"D:/AI workspace/Agentic_demo/web-agent-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"messagesContainer\"];\nfunction ChatComponent_div_8_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵelement(1, \"span\")(2, \"span\")(3, \"span\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_8_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r2.content);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"agent-message\": a1\n  };\n};\nfunction ChatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"div\", 13);\n    i0.ɵɵtemplate(3, ChatComponent_div_8_span_3_Template, 4, 0, \"span\", 14);\n    i0.ɵɵtemplate(4, ChatComponent_div_8_span_4_Template, 2, 1, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, message_r2.isUser, !message_r2.isUser));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", message_r2.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !message_r2.isLoading);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 4, message_r2.timestamp, \"short\"), \" \");\n  }\n}\nlet ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService) {\n      this.chatService = chatService;\n      this.messages = [];\n      this.currentMessage = '';\n      this.isLoading = false;\n    }\n    ngOnInit() {\n      this.messages.push({\n        content: \"Hello! I'm your Web Agent Assistant. I can search the web and provide you with information on any topic. What would you like to know?\",\n        isUser: false,\n        timestamp: new Date()\n      });\n    }\n    ngAfterViewChecked() {\n      this.scrollToBottom();\n    }\n    onKeyDown(event) {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        this.sendMessage();\n      }\n    }\n    sendMessage() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!_this.currentMessage.trim() || _this.isLoading) return;\n        const userMessage = {\n          content: _this.currentMessage,\n          isUser: true,\n          timestamp: new Date()\n        };\n        _this.messages.push(userMessage);\n        const loadingMessage = {\n          content: '',\n          isUser: false,\n          timestamp: new Date(),\n          isLoading: true\n        };\n        _this.messages.push(loadingMessage);\n        _this.isLoading = true;\n        const question = _this.currentMessage;\n        _this.currentMessage = '';\n        try {\n          const response = yield _this.chatService.sendMessage(question);\n          const index = _this.messages.indexOf(loadingMessage);\n          if (index !== -1) {\n            _this.messages[index] = {\n              content: response,\n              isUser: false,\n              timestamp: new Date(),\n              isLoading: false\n            };\n          }\n        } catch (error) {\n          const index = _this.messages.indexOf(loadingMessage);\n          if (index !== -1) {\n            _this.messages[index] = {\n              content: 'Sorry, I encountered an error while processing your request. Please try again.',\n              isUser: false,\n              timestamp: new Date(),\n              isLoading: false\n            };\n          }\n        } finally {\n          _this.isLoading = false;\n        }\n      })();\n    }\n    scrollToBottom() {\n      try {\n        this.messagesContainer.nativeElement.scrollTop = this.messagesContainer.nativeElement.scrollHeight;\n      } catch (err) {}\n    }\n    static {\n      this.ɵfac = function ChatComponent_Factory(t) {\n        return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ChatComponent,\n        selectors: [[\"app-chat\"]],\n        viewQuery: function ChatComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messagesContainer = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 15,\n        vars: 4,\n        consts: [[1, \"chat-container\"], [1, \"chat-header\"], [1, \"messages-container\"], [\"messagesContainer\", \"\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-container\"], [1, \"input-wrapper\"], [\"placeholder\", \"Ask me anything...\", \"rows\", \"1\", 1, \"message-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"keydown\"], [1, \"send-button\", 3, \"disabled\", \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\"], [\"d\", \"M2 21L23 12L2 3V10L17 12L2 14V21Z\", \"fill\", \"currentColor\"], [1, \"message\", 3, \"ngClass\"], [1, \"message-content\"], [1, \"message-text\"], [\"class\", \"loading-dots\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"message-time\"], [1, \"loading-dots\"]],\n        template: function ChatComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n            i0.ɵɵtext(3, \"Web Agent Assistant\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"p\");\n            i0.ɵɵtext(5, \"Ask me anything and I'll search the web for answers\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 2, 3);\n            i0.ɵɵtemplate(8, ChatComponent_div_8_Template, 8, 10, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 5)(10, \"div\", 6)(11, \"textarea\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_11_listener($event) {\n              return ctx.currentMessage = $event;\n            })(\"keydown\", function ChatComponent_Template_textarea_keydown_11_listener($event) {\n              return ctx.onKeyDown($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n              return ctx.sendMessage();\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(13, \"svg\", 9);\n            i0.ɵɵelement(14, \"path\", 10);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx.currentMessage)(\"disabled\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", !ctx.currentMessage.trim() || ctx.isLoading);\n          }\n        },\n        dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.DatePipe, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n        styles: [\".chat-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100vh;background-color:#212121;color:#fff}.chat-header[_ngcontent-%COMP%]{padding:20px;text-align:center;border-bottom:1px solid #444;background-color:#1a1a1a}.chat-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:24px;font-weight:600;margin-bottom:8px;color:#fff}.chat-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#b0b0b0;font-size:14px}.messages-container[_ngcontent-%COMP%]{flex:1;overflow-y:auto;padding:20px;display:flex;flex-direction:column;gap:16px}.messages-container[_ngcontent-%COMP%]::-webkit-scrollbar{width:6px}.messages-container[_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#2a2a2a}.messages-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:#555;border-radius:3px}.message[_ngcontent-%COMP%]{display:flex;max-width:80%;word-wrap:break-word}.user-message[_ngcontent-%COMP%]{align-self:flex-end;margin-left:auto}.agent-message[_ngcontent-%COMP%]{align-self:flex-start;margin-right:auto}.message-content[_ngcontent-%COMP%]{background-color:#333;padding:12px 16px;border-radius:16px;position:relative;max-width:100%}.user-message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%]{background-color:#0084ff;color:#fff}.agent-message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%]{background-color:#333;color:#fff}.message-text[_ngcontent-%COMP%]{line-height:1.4;font-size:14px;white-space:pre-wrap;word-break:break-word}.message-time[_ngcontent-%COMP%]{font-size:11px;color:#b0b0b0;margin-top:4px;text-align:right}.user-message[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%]{color:#ffffffb3}.loading-dots[_ngcontent-%COMP%]{display:inline-flex;align-items:center;gap:2px}.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{width:6px;height:6px;border-radius:50%;background-color:#b0b0b0;animation:_ngcontent-%COMP%_loading 1.4s infinite ease-in-out both}.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1){animation-delay:-.32s}.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.16s}@keyframes _ngcontent-%COMP%_loading{0%,80%,to{transform:scale(.8);opacity:.5}40%{transform:scale(1);opacity:1}}.input-container[_ngcontent-%COMP%]{padding:20px;border-top:1px solid #444;background-color:#1a1a1a}.input-wrapper[_ngcontent-%COMP%]{display:flex;align-items:flex-end;gap:12px;max-width:768px;margin:0 auto;background-color:#333;border-radius:20px;padding:8px}.message-input[_ngcontent-%COMP%]{flex:1;border:none;outline:none;background:transparent;color:#fff;font-size:14px;resize:none;padding:8px 12px;line-height:1.4;font-family:inherit;min-height:20px;max-height:120px}.message-input[_ngcontent-%COMP%]::placeholder{color:#888}.message-input[_ngcontent-%COMP%]:disabled{opacity:.6}.send-button[_ngcontent-%COMP%]{background-color:#0084ff;border:none;border-radius:50%;width:36px;height:36px;display:flex;align-items:center;justify-content:center;cursor:pointer;color:#fff;transition:background-color .2s}.send-button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#0073e6}.send-button[_ngcontent-%COMP%]:disabled{background-color:#666;cursor:not-allowed}.send-button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:16px;height:16px}@media (max-width: 768px){.message[_ngcontent-%COMP%]{max-width:90%}.chat-header[_ngcontent-%COMP%], .messages-container[_ngcontent-%COMP%], .input-container[_ngcontent-%COMP%]{padding:15px}}\"]\n      });\n    }\n  }\n  return ChatComponent;\n})();\nexport { ChatComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}