{"ast":null,"code":"import _asyncToGenerator from \"D:/AI workspace/Agentic_demo/web-agent-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000';\n    }\n    sendMessage(question) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const request = {\n            question\n          };\n          const response = yield firstValueFrom(_this.http.post(`${_this.apiUrl}/search`, request));\n          return response.answer;\n        } catch (error) {\n          console.error('Error sending message:', error);\n          throw new Error('Failed to send message to web agent');\n        }\n      })();\n    }\n    checkConnection() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield firstValueFrom(_this2.http.get(`${_this2.apiUrl}/`));\n          return true;\n        } catch (error) {\n          console.error('Web agent API is not available:', error);\n          return false;\n        }\n      })();\n    }\n    static {\n      this.ɵfac = function ChatService_Factory(t) {\n        return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ChatService,\n        factory: ChatService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ChatService;\n})();\nexport { ChatService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}